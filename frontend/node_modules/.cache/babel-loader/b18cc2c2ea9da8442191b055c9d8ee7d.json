{"ast":null,"code":"var _jsxFileName = \"/Users/jak/Desktop/Codes/MERN/ShoppingCart/frontend/src/components/ProductList.js\";\nimport React, { Component } from 'react';\nimport Faker from 'faker';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add } from '../slices/productSlice';\nconst apiURL = 'http://localhost:4000/shopping';\nexport default class ProductList extends Component {\n  async componentDidMount() {\n    // const response = await fetch(apiURL)\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     this.setState({data});\n    //   });\n    //   console.log(this.state.data)\n    let data = this.getFakerData(); //this.setState({data});\n\n    dispatch(add(data));\n  }\n\n  getFakerData() {\n    const total = 23;\n    let counter;\n    const response = [];\n\n    for (counter = 0; counter < total; counter++) {\n      response[counter] = {};\n      response[counter][\"_id\"] = counter.toString();\n      response[counter][\"product_name\"] = Faker.commerce.productName();\n      response[counter][\"product_description\"] = Faker.lorem.sentence();\n      response[counter][\"product_price\"] = Faker.commerce.price();\n      response[counter][\"product_quantity\"] = Faker.random.number();\n      response[counter][\"product_images\"] = this.imageArray();\n    }\n\n    return response;\n  }\n\n  imageArray() {\n    let imageArray = [];\n    let range = Math.floor(Math.random() * 5) + 3;\n\n    for (let i = 0; i <= range; i++) {\n      imageArray.push(Faker.internet.avatar());\n    }\n\n    return imageArray;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \" This is the productPage\"), console.log());\n  }\n\n}","map":{"version":3,"sources":["/Users/jak/Desktop/Codes/MERN/ShoppingCart/frontend/src/components/ProductList.js"],"names":["React","Component","Faker","useDispatch","useSelector","add","apiURL","ProductList","componentDidMount","data","getFakerData","dispatch","total","counter","response","toString","commerce","productName","lorem","sentence","price","random","number","imageArray","range","Math","floor","i","push","internet","avatar","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,QAAoB,wBAApB;AAGA,MAAMC,MAAM,GAAG,gCAAf;AACA,eAAe,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAE/C,QAAMO,iBAAN,GACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,IAAI,GAAG,KAAKC,YAAL,EAAX,CAPJ,CAQI;;AACAC,IAAAA,QAAQ,CAACN,GAAG,CAACI,IAAD,CAAJ,CAAR;AACH;;AAEDC,EAAAA,YAAY,GAAE;AACV,UAAME,KAAK,GAAC,EAAZ;AACA,QAAIC,OAAJ;AACA,UAAMC,QAAQ,GAAG,EAAjB;;AAEA,SAAID,OAAO,GAAG,CAAd,EAAiBA,OAAO,GAACD,KAAzB,EAA+BC,OAAO,EAAtC,EACA;AACEC,MAAAA,QAAQ,CAACD,OAAD,CAAR,GAAoB,EAApB;AACAC,MAAAA,QAAQ,CAACD,OAAD,CAAR,CAAkB,KAAlB,IAA2BA,OAAO,CAACE,QAAR,EAA3B;AACAD,MAAAA,QAAQ,CAACD,OAAD,CAAR,CAAkB,cAAlB,IAAmCX,KAAK,CAACc,QAAN,CAAeC,WAAf,EAAnC;AACAH,MAAAA,QAAQ,CAACD,OAAD,CAAR,CAAkB,qBAAlB,IAA0CX,KAAK,CAACgB,KAAN,CAAYC,QAAZ,EAA1C;AACAL,MAAAA,QAAQ,CAACD,OAAD,CAAR,CAAkB,eAAlB,IAAoCX,KAAK,CAACc,QAAN,CAAeI,KAAf,EAApC;AACAN,MAAAA,QAAQ,CAACD,OAAD,CAAR,CAAkB,kBAAlB,IAAwCX,KAAK,CAACmB,MAAN,CAAaC,MAAb,EAAxC;AACAR,MAAAA,QAAQ,CAACD,OAAD,CAAR,CAAkB,gBAAlB,IAAqC,KAAKU,UAAL,EAArC;AACD;;AACD,WAAOT,QAAP;AAED;;AAEHS,EAAAA,UAAU,GACV;AACI,QAAIA,UAAU,GAAG,EAAjB;AACA,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACJ,MAAL,KAAgB,CAA3B,IAAgC,CAA5C;;AACA,SAAI,IAAIM,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAEH,KAAjB,EAAuBG,CAAC,EAAxB,EACA;AACEJ,MAAAA,UAAU,CAACK,IAAX,CAAgB1B,KAAK,CAAC2B,QAAN,CAAeC,MAAf,EAAhB;AACD;;AAED,WAAOP,UAAP;AACH;;AAGDQ,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEKC,OAAO,CAACC,GAAR,EAFL,CADJ;AAMH;;AAtD8C","sourcesContent":["import React, { Component } from 'react'\nimport Faker from 'faker';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add } from '../slices/productSlice';\n\n\nconst apiURL = 'http://localhost:4000/shopping';\nexport default class ProductList extends Component {\n\n    async componentDidMount()\n    {\n        // const response = await fetch(apiURL)\n        //   .then((response) => response.json())\n        //   .then((data) => {\n        //     this.setState({data});\n        //   });\n        //   console.log(this.state.data)\n        let data = this.getFakerData();\n        //this.setState({data});\n        dispatch(add(data));\n    }\n\n    getFakerData(){\n        const total=23;\n        let counter;\n        const response = [];\n    \n        for(counter = 0; counter<total;counter++)\n        {\n          response[counter] = {}\n          response[counter][\"_id\"] = counter.toString();\n          response[counter][\"product_name\"]= Faker.commerce.productName();\n          response[counter][\"product_description\"]= Faker.lorem.sentence();\n          response[counter][\"product_price\"]= Faker.commerce.price();\n          response[counter][\"product_quantity\"] = Faker.random.number();\n          response[counter][\"product_images\"]= this.imageArray();\n        }\n        return response;\n    \n      }\n\n    imageArray()\n    {\n        let imageArray = [];\n        let range = Math.floor(Math.random() * 5) + 3;\n        for(let i =0; i<=range;i++)\n        {\n          imageArray.push(Faker.internet.avatar());\n        }\n    \n        return imageArray;\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <h1> This is the productPage</h1>\n                {console.log()}\n            </React.Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}