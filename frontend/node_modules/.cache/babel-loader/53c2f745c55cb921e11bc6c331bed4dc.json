{"ast":null,"code":"var _jsxFileName = \"/Users/jak/Desktop/Codes/MERN/ShoppingCart/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './CSS/App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Faker from 'faker';\nimport Container from './components/modalContiners/container';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport NavBar from './components/NavBar';\nimport ErrorPage from './components/ErrorPage';\nimport ProductList from './components/ProductList';\nconst apiURL = 'http://localhost:4000/shopping';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    // const response = await fetch(apiURL)\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     this.setState({data});\n    //   });\n    //   console.log(this.state.data)\n    let data = this.getFakerData();\n    this.setState({\n      data\n    });\n  }\n\n  getFakerData() {\n    const total = 23;\n    let counter;\n    const response = [];\n\n    for (counter = 0; counter < total; counter++) {\n      response[counter] = {};\n      response[counter][\"_id\"] = counter.toString();\n      response[counter][\"product_name\"] = Faker.commerce.productName();\n      response[counter][\"product_description\"] = Faker.lorem.sentence();\n      response[counter][\"product_price\"] = Faker.commerce.price();\n      response[counter][\"product_quantity\"] = Faker.random.number();\n      response[counter][\"product_images\"] = this.imageArray();\n    }\n\n    return response;\n  }\n\n  imageArray() {\n    let imageArray = [];\n    let range = Math.floor(Math.random() * 5) + 3;\n\n    for (let i = 0; i <= range; i++) {\n      imageArray.push(Faker.internet.avatar());\n    }\n\n    return imageArray;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: ProductList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: ErrorPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }))) // <div className=\"App\">\n    //   <Grid className='appGrid'>\n    //     <Row className='headerRow'>\n    //       <Col className='NavBarColumn' >\n    //       <NavBar className='NavBar'/>\n    //       </Col>\n    //       <Col className='headerButtonsColumn' end='xs'>\n    //         <Row className='loginLogoutRow'>\n    //           <Col className='loginButtonCol'>\n    //             <Container \n    //               className = \"login\"\n    //               triggerText={'Login'} \n    //               triggerType={'button'} \n    //               formType={'login'} />\n    //           </Col>\n    //           <Col className='registerButtonCol'>\n    //             <Container className = 'register'\n    //               triggerText={'Register'} \n    //               triggerType={'button'} \n    //               formType={'register'}/>\n    //           </Col>\n    //         </Row>\n    //         <Row className='cartButtonCol'>\n    //           <Container \n    //             className = 'cart'\n    //             triggerText={'Cart'} \n    //             triggerType={'button'} \n    //             formType={'cart'}/>\n    //         </Row>\n    //       </Col>\n    //       this\n    //     </Row>\n    //     <Row className='bodyRow'>\n    //       <Col className='bodyRowSidePane'>this</Col>\n    //       <Col className='bodyRowMainView'>\n    //         <Row>\n    //         {this.state.data.map(product => (\n    //           <Col className='product' xOffset={11} xs={12} sm={5} lg={3} key={product._id.toString()} >\n    //             <Container\n    //               className = 'productCard' \n    //               triggerText={product.product_name} \n    //               triggerType={'image'} \n    //               formType={'product'} \n    //               info={product} \n    //               triggerImage={product.product_images[0]}/>\n    //               <div>{product.product_name}</div>\n    //           </Col>\n    //           ))}\n    //           </Row>\n    //       </Col>\n    //     </Row>\n    //     <Row className='footerRow'>\n    //       this footer\n    //     </Row>\n    //   </Grid>\n    // </div>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jak/Desktop/Codes/MERN/ShoppingCart/frontend/src/App.js"],"names":["React","Component","Switch","Route","Faker","Container","Grid","Row","Col","NavBar","ErrorPage","ProductList","apiURL","App","constructor","props","state","data","componentDidMount","getFakerData","setState","total","counter","response","toString","commerce","productName","lorem","sentence","price","random","number","imageArray","range","Math","floor","i","push","internet","avatar","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './CSS/App.css';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Faker from 'faker';\r\nimport Container from './components/modalContiners/container';\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport NavBar from './components/NavBar';\r\nimport ErrorPage from './components/ErrorPage'\r\nimport ProductList from './components/ProductList';\r\n\r\n\r\n\r\n\r\n\r\nconst apiURL = 'http://localhost:4000/shopping';\r\nclass App extends Component {\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data:[],\r\n    }\r\n  }\r\n\r\n  async componentDidMount()\r\n  {\r\n    // const response = await fetch(apiURL)\r\n    //   .then((response) => response.json())\r\n    //   .then((data) => {\r\n    //     this.setState({data});\r\n    //   });\r\n    //   console.log(this.state.data)\r\n    let data = this.getFakerData();\r\n    this.setState({data});\r\n  }\r\n\r\n  getFakerData(){\r\n    const total=23;\r\n    let counter;\r\n    const response = [];\r\n\r\n    for(counter = 0; counter<total;counter++)\r\n    {\r\n      response[counter] = {}\r\n      response[counter][\"_id\"] = counter.toString();\r\n      response[counter][\"product_name\"]= Faker.commerce.productName();\r\n      response[counter][\"product_description\"]= Faker.lorem.sentence();\r\n      response[counter][\"product_price\"]= Faker.commerce.price();\r\n      response[counter][\"product_quantity\"] = Faker.random.number();\r\n      response[counter][\"product_images\"]= this.imageArray();\r\n    }\r\n    return response;\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  imageArray()\r\n  {\r\n    let imageArray = [];\r\n    let range = Math.floor(Math.random() * 5) + 3;\r\n    for(let i =0; i<=range;i++)\r\n    {\r\n\r\n      imageArray.push(Faker.internet.avatar());\r\n    }\r\n\r\n    return imageArray;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path='/' component={ProductList} />\r\n          <Route component={ErrorPage} />\r\n        </Switch>\r\n      </React.Fragment>\r\n      // <div className=\"App\">\r\n      //   <Grid className='appGrid'>\r\n      //     <Row className='headerRow'>\r\n      //       <Col className='NavBarColumn' >\r\n      //       <NavBar className='NavBar'/>\r\n      //       </Col>\r\n      //       <Col className='headerButtonsColumn' end='xs'>\r\n      //         <Row className='loginLogoutRow'>\r\n      //           <Col className='loginButtonCol'>\r\n      //             <Container \r\n      //               className = \"login\"\r\n      //               triggerText={'Login'} \r\n      //               triggerType={'button'} \r\n      //               formType={'login'} />\r\n      //           </Col>\r\n      //           <Col className='registerButtonCol'>\r\n      //             <Container className = 'register'\r\n      //               triggerText={'Register'} \r\n      //               triggerType={'button'} \r\n      //               formType={'register'}/>\r\n      //           </Col>\r\n      //         </Row>\r\n      //         <Row className='cartButtonCol'>\r\n      //           <Container \r\n      //             className = 'cart'\r\n      //             triggerText={'Cart'} \r\n      //             triggerType={'button'} \r\n      //             formType={'cart'}/>\r\n      //         </Row>\r\n      //       </Col>\r\n      //       this\r\n      //     </Row>\r\n      //     <Row className='bodyRow'>\r\n      //       <Col className='bodyRowSidePane'>this</Col>\r\n      //       <Col className='bodyRowMainView'>\r\n      //         <Row>\r\n      //         {this.state.data.map(product => (\r\n      //           <Col className='product' xOffset={11} xs={12} sm={5} lg={3} key={product._id.toString()} >\r\n      //             <Container\r\n      //               className = 'productCard' \r\n      //               triggerText={product.product_name} \r\n      //               triggerType={'image'} \r\n      //               formType={'product'} \r\n      //               info={product} \r\n      //               triggerImage={product.product_images[0]}/>\r\n      //               <div>{product.product_name}</div>\r\n\r\n      //           </Col>\r\n      //           ))}\r\n      //           </Row>\r\n      //       </Col>\r\n      //     </Row>\r\n      //     <Row className='footerRow'>\r\n      //       this footer\r\n      //     </Row>\r\n      //   </Grid>\r\n\r\n\r\n\r\n\r\n\r\n      // </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}